{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReveresed","startOrder","goods","visibleGoods","ALPHABET","sort","goodA","goodB","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAqCH,oBAAS,GAA9C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAaJ,IAAaL,EAASI,OAASG,EAE5CG,EAtCD,SACLA,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASI,KACZ,MAEF,KAAKJ,EAASY,SACZD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAME,cAAcD,MAE7B,MAEF,KAAKf,EAASiB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAOD,EAAMI,OAASH,EAAMG,UAE9B,MAEF,QACE,MAAMC,MAAM,oBAOhB,OAJIZ,GACFI,EAAaS,UAGRT,EAQOU,CAAkBpB,EAAiB,CAAEI,WAAUE,eAmB7D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAlBmB,WACzBlB,EAAYN,EAASY,WAkBfU,UAAS,yBAAoBjB,IAAaL,EAASY,SAC/C,GACA,YALN,iCAWA,wBACEY,QAxBa,WACnBlB,EAAYN,EAASiB,SAwBfM,KAAK,SACLD,UAAS,4BAAuBjB,IAAaL,EAASiB,OAClD,GACA,YALN,4BAWA,wBACEO,QA3CQ,WACdhB,GAAgBD,IA2CVgB,KAAK,SACLD,UAAS,4BAAuBf,EAC5B,GACA,YALN,sBAWEE,GACA,wBACEe,QA3CI,WACZlB,EAAYN,EAASI,MACrBI,GAAe,IA0CPe,KAAK,SACLD,UAAU,4BAHZ,sBASJ,6BACGZ,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCnIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cabcf622.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.NONE:\n      break;\n\n    case SortType.ALPHABET:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.localeCompare(goodB);\n      });\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((goodA, goodB) => {\n        return goodA.length - goodB.length;\n      });\n      break;\n\n    default:\n      throw Error('Unknown sortType');\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReveresed] = useState(false);\n  const startOrder = sortType === SortType.NONE && !isReversed;\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const reverse = () => {\n    setIsReveresed(!isReversed);\n  };\n\n  const sortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReveresed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortAlphabetically}\n          className={`button is-info ${sortType === SortType.ALPHABET\n            ? ''\n            : 'is-light'\n          }`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={`button is-success ${sortType === SortType.LENGTH\n            ? ''\n            : 'is-light'\n          }`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={`button is-warning ${isReversed\n            ? ''\n            : 'is-light'\n          }`}\n        >\n          Reverse\n        </button>\n\n        {!startOrder && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {goods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}